{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState, useCallback } from \"react\";\nconst useCounter = _ref => {\n  _s();\n  let {\n    intervalIdRef,\n    delay,\n    initialCountValue = 0,\n    incrementCountValue = 1\n  } = _ref;\n  const [countValue, setCountValue] = useState(initialCountValue);\n  const DELAY = delay;\n  const incrementCount = useCallback(() => {\n    setCountValue(count => count + incrementCountValue);\n  }, [incrementCountValue]);\n  const decremementCount = useCallback(() => {\n    setCountValue(initialCountValue);\n  }, [initialCountValue]);\n  const onMouseClick = () => {\n    if (!intervalIdRef.current) {\n      intervalIdRef.current = setInterval(() => {\n        incrementCount();\n      }, DELAY);\n    }\n  };\n  const onMouseClickLeft = () => {\n    if (intervalIdRef.current) {\n      clearInterval(intervalIdRef.current);\n      decremementCount();\n      intervalIdRef.current = undefined;\n    }\n  };\n  return {\n    onMouseClickLeft,\n    onMouseClick,\n    countValue\n  };\n};\n_s(useCounter, \"W5idU5qGKgulVegsfj+41FKtHB0=\");\nexport default useCounter;","map":{"version":3,"names":["useState","useCallback","useCounter","_ref","_s","intervalIdRef","delay","initialCountValue","incrementCountValue","countValue","setCountValue","DELAY","incrementCount","count","decremementCount","onMouseClick","current","setInterval","onMouseClickLeft","clearInterval","undefined"],"sources":["/Users/murat/usecountertestapp/src/useCounter.js"],"sourcesContent":["import { useState, useCallback } from \"react\";\n\nconst useCounter = ({ intervalIdRef, delay, initialCountValue = 0, incrementCountValue = 1 }) => {\n  const [countValue, setCountValue] = useState(initialCountValue);\n\n  const DELAY = delay;\n\n  const incrementCount = useCallback(() => {\n    setCountValue((count) => count + incrementCountValue);\n  }, [incrementCountValue]);\n\n  const decremementCount = useCallback(() => {\n    setCountValue(initialCountValue);\n  }, [initialCountValue]);\n\n  const onMouseClick = () => {\n    if (!intervalIdRef.current) {\n      intervalIdRef.current = setInterval(() => {\n        incrementCount();\n      }, DELAY);\n    }\n  };\n\n  const onMouseClickLeft = () => {\n    if (intervalIdRef.current) {\n      clearInterval(intervalIdRef.current);\n      decremementCount();\n      intervalIdRef.current = undefined;\n    }\n  };\n\n  return { onMouseClickLeft, onMouseClick, countValue };\n};\n\nexport default useCounter;"],"mappings":";AAAA,SAASA,QAAQ,EAAEC,WAAW,QAAQ,OAAO;AAE7C,MAAMC,UAAU,GAAGC,IAAA,IAA8E;EAAAC,EAAA;EAAA,IAA7E;IAAEC,aAAa;IAAEC,KAAK;IAAEC,iBAAiB,GAAG,CAAC;IAAEC,mBAAmB,GAAG;EAAE,CAAC,GAAAL,IAAA;EAC1F,MAAM,CAACM,UAAU,EAAEC,aAAa,CAAC,GAAGV,QAAQ,CAACO,iBAAiB,CAAC;EAE/D,MAAMI,KAAK,GAAGL,KAAK;EAEnB,MAAMM,cAAc,GAAGX,WAAW,CAAC,MAAM;IACvCS,aAAa,CAAEG,KAAK,IAAKA,KAAK,GAAGL,mBAAmB,CAAC;EACvD,CAAC,EAAE,CAACA,mBAAmB,CAAC,CAAC;EAEzB,MAAMM,gBAAgB,GAAGb,WAAW,CAAC,MAAM;IACzCS,aAAa,CAACH,iBAAiB,CAAC;EAClC,CAAC,EAAE,CAACA,iBAAiB,CAAC,CAAC;EAEvB,MAAMQ,YAAY,GAAGA,CAAA,KAAM;IACzB,IAAI,CAACV,aAAa,CAACW,OAAO,EAAE;MAC1BX,aAAa,CAACW,OAAO,GAAGC,WAAW,CAAC,MAAM;QACxCL,cAAc,CAAC,CAAC;MAClB,CAAC,EAAED,KAAK,CAAC;IACX;EACF,CAAC;EAED,MAAMO,gBAAgB,GAAGA,CAAA,KAAM;IAC7B,IAAIb,aAAa,CAACW,OAAO,EAAE;MACzBG,aAAa,CAACd,aAAa,CAACW,OAAO,CAAC;MACpCF,gBAAgB,CAAC,CAAC;MAClBT,aAAa,CAACW,OAAO,GAAGI,SAAS;IACnC;EACF,CAAC;EAED,OAAO;IAAEF,gBAAgB;IAAEH,YAAY;IAAEN;EAAW,CAAC;AACvD,CAAC;AAACL,EAAA,CA9BIF,UAAU;AAgChB,eAAeA,UAAU"},"metadata":{},"sourceType":"module","externalDependencies":[]}